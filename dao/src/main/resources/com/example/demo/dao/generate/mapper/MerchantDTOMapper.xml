<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.generate.mapper.MerchantDTOMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.dao.generate.dto.MerchantDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="applicant" jdbcType="VARCHAR" property="applicant" />
    <result column="facility_type" jdbcType="VARCHAR" property="facilityType" />
    <result column="cnn" jdbcType="VARCHAR" property="cnn" />
    <result column="location_description" jdbcType="VARCHAR" property="locationDescription" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="block_lot" jdbcType="VARCHAR" property="blockLot" />
    <result column="block" jdbcType="VARCHAR" property="block" />
    <result column="lot" jdbcType="VARCHAR" property="lot" />
    <result column="permit" jdbcType="VARCHAR" property="permit" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="food_items" jdbcType="VARCHAR" property="foodItems" />
    <result column="x" jdbcType="DECIMAL" property="x" />
    <result column="y" jdbcType="DECIMAL" property="y" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="schedule" jdbcType="VARCHAR" property="schedule" />
    <result column="days_hours" jdbcType="VARCHAR" property="daysHours" />
    <result column="noise_sent" jdbcType="VARCHAR" property="noiseSent" />
    <result column="approved" jdbcType="TIMESTAMP" property="approved" />
    <result column="received" jdbcType="TIMESTAMP" property="received" />
    <result column="prior_permit" jdbcType="VARCHAR" property="priorPermit" />
    <result column="expiration_date" jdbcType="TIMESTAMP" property="expirationDate" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="fire_prevention_districts" jdbcType="INTEGER" property="firePreventionDistricts" />
    <result column="police_districts" jdbcType="INTEGER" property="policeDistricts" />
    <result column="supervisor_districts" jdbcType="INTEGER" property="supervisorDistricts" />
    <result column="zip_codes" jdbcType="VARCHAR" property="zipCodes" />
    <result column="neighborhoods_old" jdbcType="VARCHAR" property="neighborhoodsOld" />
    <result column="sale_amount" jdbcType="DECIMAL" property="saleAmount" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, location_id, applicant, facility_type, cnn, location_description, address, block_lot, 
    block, lot, permit, status, food_items, x, y, latitude, longitude, schedule, days_hours, 
    noise_sent, approved, received, prior_permit, expiration_date, location, fire_prevention_districts, 
    police_districts, supervisor_districts, zip_codes, neighborhoods_old, sale_amount, 
    create_at
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.dao.generate.dto.MerchantDTOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mobile_food_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mobile_food_merchant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mobile_food_merchant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.dao.generate.dto.MerchantDTOExample">
    delete from mobile_food_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.dao.generate.dto.MerchantDTO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mobile_food_merchant (location_id, applicant, facility_type, 
      cnn, location_description, address, 
      block_lot, block, lot, 
      permit, status, food_items, 
      x, y, latitude, longitude, 
      schedule, days_hours, noise_sent, 
      approved, received, prior_permit, 
      expiration_date, location, fire_prevention_districts, 
      police_districts, supervisor_districts, zip_codes, 
      neighborhoods_old, sale_amount, create_at
      )
    values (#{locationId,jdbcType=INTEGER}, #{applicant,jdbcType=VARCHAR}, #{facilityType,jdbcType=VARCHAR}, 
      #{cnn,jdbcType=VARCHAR}, #{locationDescription,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{blockLot,jdbcType=VARCHAR}, #{block,jdbcType=VARCHAR}, #{lot,jdbcType=VARCHAR}, 
      #{permit,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{foodItems,jdbcType=VARCHAR}, 
      #{x,jdbcType=DECIMAL}, #{y,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL}, 
      #{schedule,jdbcType=VARCHAR}, #{daysHours,jdbcType=VARCHAR}, #{noiseSent,jdbcType=VARCHAR}, 
      #{approved,jdbcType=TIMESTAMP}, #{received,jdbcType=TIMESTAMP}, #{priorPermit,jdbcType=VARCHAR}, 
      #{expirationDate,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, #{firePreventionDistricts,jdbcType=INTEGER}, 
      #{policeDistricts,jdbcType=INTEGER}, #{supervisorDistricts,jdbcType=INTEGER}, #{zipCodes,jdbcType=VARCHAR}, 
      #{neighborhoodsOld,jdbcType=VARCHAR}, #{saleAmount,jdbcType=DECIMAL}, #{createAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.dao.generate.dto.MerchantDTO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mobile_food_merchant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="locationId != null">
        location_id,
      </if>
      <if test="applicant != null">
        applicant,
      </if>
      <if test="facilityType != null">
        facility_type,
      </if>
      <if test="cnn != null">
        cnn,
      </if>
      <if test="locationDescription != null">
        location_description,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="blockLot != null">
        block_lot,
      </if>
      <if test="block != null">
        block,
      </if>
      <if test="lot != null">
        lot,
      </if>
      <if test="permit != null">
        permit,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="foodItems != null">
        food_items,
      </if>
      <if test="x != null">
        x,
      </if>
      <if test="y != null">
        y,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="daysHours != null">
        days_hours,
      </if>
      <if test="noiseSent != null">
        noise_sent,
      </if>
      <if test="approved != null">
        approved,
      </if>
      <if test="received != null">
        received,
      </if>
      <if test="priorPermit != null">
        prior_permit,
      </if>
      <if test="expirationDate != null">
        expiration_date,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="firePreventionDistricts != null">
        fire_prevention_districts,
      </if>
      <if test="policeDistricts != null">
        police_districts,
      </if>
      <if test="supervisorDistricts != null">
        supervisor_districts,
      </if>
      <if test="zipCodes != null">
        zip_codes,
      </if>
      <if test="neighborhoodsOld != null">
        neighborhoods_old,
      </if>
      <if test="saleAmount != null">
        sale_amount,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null">
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="facilityType != null">
        #{facilityType,jdbcType=VARCHAR},
      </if>
      <if test="cnn != null">
        #{cnn,jdbcType=VARCHAR},
      </if>
      <if test="locationDescription != null">
        #{locationDescription,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="blockLot != null">
        #{blockLot,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        #{block,jdbcType=VARCHAR},
      </if>
      <if test="lot != null">
        #{lot,jdbcType=VARCHAR},
      </if>
      <if test="permit != null">
        #{permit,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="foodItems != null">
        #{foodItems,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        #{x,jdbcType=DECIMAL},
      </if>
      <if test="y != null">
        #{y,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="daysHours != null">
        #{daysHours,jdbcType=VARCHAR},
      </if>
      <if test="noiseSent != null">
        #{noiseSent,jdbcType=VARCHAR},
      </if>
      <if test="approved != null">
        #{approved,jdbcType=TIMESTAMP},
      </if>
      <if test="received != null">
        #{received,jdbcType=TIMESTAMP},
      </if>
      <if test="priorPermit != null">
        #{priorPermit,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null">
        #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="firePreventionDistricts != null">
        #{firePreventionDistricts,jdbcType=INTEGER},
      </if>
      <if test="policeDistricts != null">
        #{policeDistricts,jdbcType=INTEGER},
      </if>
      <if test="supervisorDistricts != null">
        #{supervisorDistricts,jdbcType=INTEGER},
      </if>
      <if test="zipCodes != null">
        #{zipCodes,jdbcType=VARCHAR},
      </if>
      <if test="neighborhoodsOld != null">
        #{neighborhoodsOld,jdbcType=VARCHAR},
      </if>
      <if test="saleAmount != null">
        #{saleAmount,jdbcType=DECIMAL},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.dao.generate.dto.MerchantDTOExample" resultType="java.lang.Long">
    select count(*) from mobile_food_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mobile_food_merchant
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null">
        location_id = #{record.locationId,jdbcType=INTEGER},
      </if>
      <if test="record.applicant != null">
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.facilityType != null">
        facility_type = #{record.facilityType,jdbcType=VARCHAR},
      </if>
      <if test="record.cnn != null">
        cnn = #{record.cnn,jdbcType=VARCHAR},
      </if>
      <if test="record.locationDescription != null">
        location_description = #{record.locationDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.blockLot != null">
        block_lot = #{record.blockLot,jdbcType=VARCHAR},
      </if>
      <if test="record.block != null">
        block = #{record.block,jdbcType=VARCHAR},
      </if>
      <if test="record.lot != null">
        lot = #{record.lot,jdbcType=VARCHAR},
      </if>
      <if test="record.permit != null">
        permit = #{record.permit,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.foodItems != null">
        food_items = #{record.foodItems,jdbcType=VARCHAR},
      </if>
      <if test="record.x != null">
        x = #{record.x,jdbcType=DECIMAL},
      </if>
      <if test="record.y != null">
        y = #{record.y,jdbcType=DECIMAL},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DECIMAL},
      </if>
      <if test="record.schedule != null">
        schedule = #{record.schedule,jdbcType=VARCHAR},
      </if>
      <if test="record.daysHours != null">
        days_hours = #{record.daysHours,jdbcType=VARCHAR},
      </if>
      <if test="record.noiseSent != null">
        noise_sent = #{record.noiseSent,jdbcType=VARCHAR},
      </if>
      <if test="record.approved != null">
        approved = #{record.approved,jdbcType=TIMESTAMP},
      </if>
      <if test="record.received != null">
        received = #{record.received,jdbcType=TIMESTAMP},
      </if>
      <if test="record.priorPermit != null">
        prior_permit = #{record.priorPermit,jdbcType=VARCHAR},
      </if>
      <if test="record.expirationDate != null">
        expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.firePreventionDistricts != null">
        fire_prevention_districts = #{record.firePreventionDistricts,jdbcType=INTEGER},
      </if>
      <if test="record.policeDistricts != null">
        police_districts = #{record.policeDistricts,jdbcType=INTEGER},
      </if>
      <if test="record.supervisorDistricts != null">
        supervisor_districts = #{record.supervisorDistricts,jdbcType=INTEGER},
      </if>
      <if test="record.zipCodes != null">
        zip_codes = #{record.zipCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.neighborhoodsOld != null">
        neighborhoods_old = #{record.neighborhoodsOld,jdbcType=VARCHAR},
      </if>
      <if test="record.saleAmount != null">
        sale_amount = #{record.saleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mobile_food_merchant
    set id = #{record.id,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=INTEGER},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      facility_type = #{record.facilityType,jdbcType=VARCHAR},
      cnn = #{record.cnn,jdbcType=VARCHAR},
      location_description = #{record.locationDescription,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      block_lot = #{record.blockLot,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=VARCHAR},
      lot = #{record.lot,jdbcType=VARCHAR},
      permit = #{record.permit,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      food_items = #{record.foodItems,jdbcType=VARCHAR},
      x = #{record.x,jdbcType=DECIMAL},
      y = #{record.y,jdbcType=DECIMAL},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      longitude = #{record.longitude,jdbcType=DECIMAL},
      schedule = #{record.schedule,jdbcType=VARCHAR},
      days_hours = #{record.daysHours,jdbcType=VARCHAR},
      noise_sent = #{record.noiseSent,jdbcType=VARCHAR},
      approved = #{record.approved,jdbcType=TIMESTAMP},
      received = #{record.received,jdbcType=TIMESTAMP},
      prior_permit = #{record.priorPermit,jdbcType=VARCHAR},
      expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      fire_prevention_districts = #{record.firePreventionDistricts,jdbcType=INTEGER},
      police_districts = #{record.policeDistricts,jdbcType=INTEGER},
      supervisor_districts = #{record.supervisorDistricts,jdbcType=INTEGER},
      zip_codes = #{record.zipCodes,jdbcType=VARCHAR},
      neighborhoods_old = #{record.neighborhoodsOld,jdbcType=VARCHAR},
      sale_amount = #{record.saleAmount,jdbcType=DECIMAL},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.dao.generate.dto.MerchantDTO">
    update mobile_food_merchant
    <set>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null">
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="facilityType != null">
        facility_type = #{facilityType,jdbcType=VARCHAR},
      </if>
      <if test="cnn != null">
        cnn = #{cnn,jdbcType=VARCHAR},
      </if>
      <if test="locationDescription != null">
        location_description = #{locationDescription,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="blockLot != null">
        block_lot = #{blockLot,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        block = #{block,jdbcType=VARCHAR},
      </if>
      <if test="lot != null">
        lot = #{lot,jdbcType=VARCHAR},
      </if>
      <if test="permit != null">
        permit = #{permit,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="foodItems != null">
        food_items = #{foodItems,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        x = #{x,jdbcType=DECIMAL},
      </if>
      <if test="y != null">
        y = #{y,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="daysHours != null">
        days_hours = #{daysHours,jdbcType=VARCHAR},
      </if>
      <if test="noiseSent != null">
        noise_sent = #{noiseSent,jdbcType=VARCHAR},
      </if>
      <if test="approved != null">
        approved = #{approved,jdbcType=TIMESTAMP},
      </if>
      <if test="received != null">
        received = #{received,jdbcType=TIMESTAMP},
      </if>
      <if test="priorPermit != null">
        prior_permit = #{priorPermit,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null">
        expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="firePreventionDistricts != null">
        fire_prevention_districts = #{firePreventionDistricts,jdbcType=INTEGER},
      </if>
      <if test="policeDistricts != null">
        police_districts = #{policeDistricts,jdbcType=INTEGER},
      </if>
      <if test="supervisorDistricts != null">
        supervisor_districts = #{supervisorDistricts,jdbcType=INTEGER},
      </if>
      <if test="zipCodes != null">
        zip_codes = #{zipCodes,jdbcType=VARCHAR},
      </if>
      <if test="neighborhoodsOld != null">
        neighborhoods_old = #{neighborhoodsOld,jdbcType=VARCHAR},
      </if>
      <if test="saleAmount != null">
        sale_amount = #{saleAmount,jdbcType=DECIMAL},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.dao.generate.dto.MerchantDTO">
    update mobile_food_merchant
    set location_id = #{locationId,jdbcType=INTEGER},
      applicant = #{applicant,jdbcType=VARCHAR},
      facility_type = #{facilityType,jdbcType=VARCHAR},
      cnn = #{cnn,jdbcType=VARCHAR},
      location_description = #{locationDescription,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      block_lot = #{blockLot,jdbcType=VARCHAR},
      block = #{block,jdbcType=VARCHAR},
      lot = #{lot,jdbcType=VARCHAR},
      permit = #{permit,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      food_items = #{foodItems,jdbcType=VARCHAR},
      x = #{x,jdbcType=DECIMAL},
      y = #{y,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      longitude = #{longitude,jdbcType=DECIMAL},
      schedule = #{schedule,jdbcType=VARCHAR},
      days_hours = #{daysHours,jdbcType=VARCHAR},
      noise_sent = #{noiseSent,jdbcType=VARCHAR},
      approved = #{approved,jdbcType=TIMESTAMP},
      received = #{received,jdbcType=TIMESTAMP},
      prior_permit = #{priorPermit,jdbcType=VARCHAR},
      expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      fire_prevention_districts = #{firePreventionDistricts,jdbcType=INTEGER},
      police_districts = #{policeDistricts,jdbcType=INTEGER},
      supervisor_districts = #{supervisorDistricts,jdbcType=INTEGER},
      zip_codes = #{zipCodes,jdbcType=VARCHAR},
      neighborhoods_old = #{neighborhoodsOld,jdbcType=VARCHAR},
      sale_amount = #{saleAmount,jdbcType=DECIMAL},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    INSERT INTO mobile_food_merchant (location_id, applicant, facility_type, 
      cnn, location_description, address, 
      block_lot, block, lot, 
      permit, status, food_items, 
      x, y, latitude, 
      longitude, schedule, days_hours, 
      noise_sent, approved, received, 
      prior_permit, expiration_date, 
      location, fire_prevention_districts, 
      police_districts, supervisor_districts, 
      zip_codes, neighborhoods_old, sale_amount, 
      create_at)
    VALUES
    <foreach collection="list" index="index" item="item" separator=",">
       (#{item.locationId,jdbcType=INTEGER}, #{item.applicant,jdbcType=VARCHAR}, #{item.facilityType,jdbcType=VARCHAR}, 
        #{item.cnn,jdbcType=VARCHAR}, #{item.locationDescription,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, 
        #{item.blockLot,jdbcType=VARCHAR}, #{item.block,jdbcType=VARCHAR}, #{item.lot,jdbcType=VARCHAR}, 
        #{item.permit,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.foodItems,jdbcType=VARCHAR}, 
        #{item.x,jdbcType=DECIMAL}, #{item.y,jdbcType=DECIMAL}, #{item.latitude,jdbcType=DECIMAL}, 
        #{item.longitude,jdbcType=DECIMAL}, #{item.schedule,jdbcType=VARCHAR}, #{item.daysHours,jdbcType=VARCHAR}, 
        #{item.noiseSent,jdbcType=VARCHAR}, #{item.approved,jdbcType=TIMESTAMP}, #{item.received,jdbcType=TIMESTAMP}, 
        #{item.priorPermit,jdbcType=VARCHAR}, #{item.expirationDate,jdbcType=TIMESTAMP}, 
        #{item.location,jdbcType=VARCHAR}, #{item.firePreventionDistricts,jdbcType=INTEGER}, 
        #{item.policeDistricts,jdbcType=INTEGER}, #{item.supervisorDistricts,jdbcType=INTEGER}, 
        #{item.zipCodes,jdbcType=VARCHAR}, #{item.neighborhoodsOld,jdbcType=VARCHAR}, #{item.saleAmount,jdbcType=DECIMAL}, 
        #{item.createAt,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>